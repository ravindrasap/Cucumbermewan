package Utility;

import java.io.File;
import java.io.FileInputStream;
import java.util.Properties;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;

public class Base {
	
	protected WebDriver driver;
	protected static Properties properties;
	protected String mobileno=Base.randomMobile();
	protected String email=Base.randommEmail();
	protected String pancard=Base.randommPAN();
	//protected String otpURL="http://v.indialends.com/test/get_otp_user_registration_encrypt.ashx?type=json&mobileno=";
    //protected String otpURL="http://uat.indialends.com/internal/a/get_otp_mail_verify_api.ashx?mobileno=";
  
    protected String otpURL = "https://uatweb.indialends.com/internal/a/get_otp_mail_verify_api.ashx?mobileno=";
	//protected String otpURL= "https://globallends.com/internal/a/get_otp_mail_verify_api.ashx?mobileno=";
	
	public void initilizeDriver(String browser){
		
		if(browser.equalsIgnoreCase("chrome")){
			System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir") +"//driver//"+"chromedriver.exe");
			driver=new ChromeDriver();
			
		} else if(browser.equalsIgnoreCase("firefox")){
			
			
			System.setProperty("webdriver.gecko.driver", System.getProperty("user.dir") +"//driver//"+"geckodriver.exe");
			driver=new FirefoxDriver();
		} else {
			
			driver=new InternetExplorerDriver();
		}
		
	}
	
	@BeforeTest(alwaysRun=true)
	public void startUp(){
		
		initilizeDriver("chrome");
		getURL();
		setWaitAndWindowMaximize();
		
	}
	
	public void getURL() {
		String URL = loadPropertiesFile("login.properties", "URL");
		System.out.println("URL Value is " + URL);
		driver.get(URL);
	}

	public static String loadPropertiesFile(String FileName, String Key) {
		String URL_Value = "";
		File file = new File(System.getProperty("user.dir")
				+ "//src//test//resources//Config_Data_Provider//" + FileName);
		try {
			FileInputStream fis = new FileInputStream(file);
			properties = new Properties();
			properties.load(fis);
			URL_Value = properties.getProperty(Key);
		} catch (Exception e) {

			System.out.println("Exception message is " + e.getMessage());
		}

		return URL_Value;
	}

	public void setWaitAndWindowMaximize() {
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	}
	
	@AfterTest(alwaysRun=true)
	public void tearDown() {
		//driver.close();
		//driver.quit();
	}
	 public static String randomEmail() {
	        return "random_" +/* UUID.randomUUID().toString() +*/ gen()+ "@gmail.com";
	    }
	    
	    private static int gen() {
	    	Random r = new Random( System.currentTimeMillis() );
	        return ((1 + r.nextInt(2)) * 10000 + r.nextInt(10000));
	    }
	    public static String randomMobile() {
			System.out.println("random number generation"); 
			Random obj= new Random(); 
			//create object for random class
			int rgen1= obj.nextInt(1000);//get random number with in the range of 0-1000 
			String cellnum = ("6123000" + rgen1); 
			//System.out.println(cellnum);
			
			return cellnum;
	    }
	    public static String randommEmail() {
	        return "random_" +/* UUID.randomUUID().toString() +*/ gen()+ "@gmail.com";
	    }
	    public static String randommPAN() {
	        return "AZXPK" +/* UUID.randomUUID().toString() +*/ genn()+ "G";
	    }
	    
	    private static int genn() {
	    	Random r = new Random( System.currentTimeMillis() );
	        return ((1 + r.nextInt(2)) * 1000 + r.nextInt(1000));
	    }
}
